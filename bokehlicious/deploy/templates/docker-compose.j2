version: '3'

services:
#  Log into this container with : docker-compose exec front sh
  front:
    image: nginx:mainline-alpine
    container_name: front
    restart: always
    volumes:
      - .:/home/docker
      - {{ ansistrano_shared_path }}:/shared
      - ./docker/front/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/front/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - engine
    labels:
      - traefik.port=80
      - traefik.enable=true
      - traefik.frontend.rule=Host:{{domain}},www.{{domain}}

#  Log into this container with : docker-compose exec engine sh
  engine: 
    build: 
      context: ./docker/engine/
      args:
      # Get the user id & group id of the owner of the project dir with "ls -la" and paste the result here. This will update the
      # project dir permission inside the container
      - HOST_USER={{ user_uid.stdout }}
      - HOST_USERGROUP={{ user_gid.stdout }}
    container_name: engine
    restart: always 
    ports:
      - 9000:9000
    volumes:
      - .:/home/docker:rw
      - {{ ansistrano_shared_path }}:/shared
      - ./docker/engine/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
    depends_on:
      - database

#  Log into this container with : docker-compose exec database sh
  database:    
    env_file: .env
    build: ./docker/database
    container_name: database
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD={{ DB_ROOT_PASSWORD }}
      - MYSQL_DATABASE={{ DB_DATABASE }}
      - MYSQL_USER={{ DB_USERNAME }}
      - MYSQL_PASSWORD={{ DB_PASSWORD }}
      # Allow empty password for the root user
      # - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 3306:3306

# A package.json file is required with script command (npm run watch, npm run dev....)
#  Log into this container with : docker-compose exec build sh
  build: 
    build: 
      context: ./docker/nodejs/
      args:
      # Get the user id & group id of the owner of the project dir with "ls -la" and paste the result here. This will update the
      # project dir permission inside the container
      - HOST_USER={{ user_uid.stdout }}
      - HOST_USERGROUP={{ user_gid.stdout }}
    container_name: build
    restart: always
    volumes:
      - ./:/home/docker:rw
      - {{ ansistrano_shared_path }}:/shared
    #    Insert the NPM run command, from the package.json, to execute at startup
    command: "npm run production"
